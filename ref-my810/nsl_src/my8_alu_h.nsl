/*
 * vim: set filetype=nsl :
 */
#define ALU_MODE_LOGICFUNC 0b0
#define ALU_MODE_ARITHOP 0b1

#define ALU_LOGIC_NOP 0x0
#define ALU_LOGIC_AND 0x1
#define ALU_LOGIC_OP2
#define ALU_LOGIC_ALLZERO 0x3
#define ALU_LOGIC_OR 0x4
#define ALU_LOGIC_SET 0x5
#define ALU_LOGIC_XOR 0x6
#define ALU_LOGIC_AND_NOT 0x7
#define ALU_LOGIC_OP8 0x8
#define ALU_LOGIC_NXOR 0x9
#define ALU_LOGIC_SETNOT 0xa
#define ALU_LOGIC_NOR 0xb
#define ALU_LOGIC_ALLONE 0xc
#define ALU_LOGIC_OR_NOT 0xd
#define ALU_LOGIC_NAND 0xe
#define ALU_LOGIC_NOT 0xf

#define ALU_ARITH_INC 0x0
#define ALU_ARITH_DBL 0x3
#define ALU_ARITH_ADD 0x6
#define ALU_ARITH_SUB 0x9
#define ALU_ARITH_EX 0xc  // extension of carry bit
#define ALU_ARITH_DEC 0xf

#define ALU_CARRY_ON 0b1
#define ALU_CARRY_OFF 0b0
#define ALU_BORROW_ON 0b0
#define ALU_BORROW_OFF 0b1

declare my8_alu {
    input m, s[4], a[8], b[8], ci ;
    output o[8], zf, co ;
    func_in do(m, s, a, b, ci) ;
}
