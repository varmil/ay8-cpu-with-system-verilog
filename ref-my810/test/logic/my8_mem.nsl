declare my8_mem {
    inout adbus[8] ;
    input rW ;
    func_in do(rW, adbus):adbus ;
}
module my8_mem {
    func_self running ;
    mem memory_cell[256][8] = {
      0x3e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
      0x05, 0x03, 0x01, 0x06, 0x3f, 0x00, 0x00, 0x00,
      0x05, 0x03, 0x02, 0x06, 0x3f, 0x00, 0x00, 0x00,
      0x05, 0x03, 0x03, 0x00, 0x3f, 0x00, 0x00, 0x00,
      0x05, 0x03, 0x04, 0x06, 0x3f, 0x00, 0x00, 0x00,
      0x05, 0x03, 0x05, 0x06, 0x3f, 0x00, 0x00, 0x00,
      0x05, 0x03, 0x06, 0x06, 0x3f, 0x00, 0x00, 0x00,
      0x05, 0x03, 0x07, 0x06, 0x3f, 0x00, 0x00, 0x00,
      0x05, 0x03, 0x08, 0x06, 0x3f, 0x00, 0x00, 0x00,
      0x05, 0x03, 0x09, 0x06, 0x3f, 0x00, 0x00, 0x00,
      0x05, 0x03, 0x0a, 0x06, 0x3f, 0x00, 0x00, 0x00,
      0x05, 0x03, 0x0b, 0x06, 0x3f, 0x00, 0x00, 0x00,
      0x05, 0x03, 0x0c, 0x00, 0x3f, 0x00, 0x00, 0x00,
      0x05, 0x03, 0x0d, 0x06, 0x3f, 0x00, 0x00, 0x00,
      0x05, 0x03, 0x0e, 0x06, 0x3f, 0x00, 0x00, 0x00,
      0x05, 0x03, 0x0f, 0x00, 0x3f, 0x00, 0x00, 0x00} ;
    reg addr_buf[8] ;

    func do seq {
        label_name r, w, quit ;

        if (running)
            goto quit ;
        else {
            addr_buf := adbus ;
            if (rW) goto r ;
            else goto w ;
        }

        r: {
            running() ;
            return memory_cell[addr_buf] ;
            goto quit ;
        }

        w: {
            running() ;
            memory_cell[addr_buf] := adbus ;
            goto quit ;
        }

        quit:
    }
}
